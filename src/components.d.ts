/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { MethodFromParent, Person, RenderH1 } from "./components/my-rating/my-rating";
export namespace Components {
    interface MyDropdown {
        "isToggle": boolean;
        "myTitle": string;
    }
    interface MyName {
    }
    interface MyRating {
        "getValue": (params: any) => Promise<number>;
        "isShow": boolean;
        "maxValue": number;
        "methodFromParent": MethodFromParent;
        "person": object;
        "personArray": Person[];
        "renderH1": RenderH1;
        "setPerson": (params: any) => Promise<boolean>;
        "setPersonArray": (persons: []) => Promise<boolean>;
        "value": number;
    }
}
declare global {
    interface HTMLMyDropdownElement extends Components.MyDropdown, HTMLStencilElement {
    }
    var HTMLMyDropdownElement: {
        prototype: HTMLMyDropdownElement;
        new (): HTMLMyDropdownElement;
    };
    interface HTMLMyNameElement extends Components.MyName, HTMLStencilElement {
    }
    var HTMLMyNameElement: {
        prototype: HTMLMyNameElement;
        new (): HTMLMyNameElement;
    };
    interface HTMLMyRatingElement extends Components.MyRating, HTMLStencilElement {
    }
    var HTMLMyRatingElement: {
        prototype: HTMLMyRatingElement;
        new (): HTMLMyRatingElement;
    };
    interface HTMLElementTagNameMap {
        "my-dropdown": HTMLMyDropdownElement;
        "my-name": HTMLMyNameElement;
        "my-rating": HTMLMyRatingElement;
    }
}
declare namespace LocalJSX {
    interface MyDropdown {
        "isToggle"?: boolean;
        "myTitle"?: string;
        "onToggle"?: (event: CustomEvent<any>) => void;
    }
    interface MyName {
    }
    interface MyRating {
        "isShow"?: boolean;
        "maxValue"?: number;
        "methodFromParent"?: MethodFromParent;
        "onRatingChange"?: (event: CustomEvent<any>) => void;
        "person"?: object;
        "personArray"?: Person[];
        "renderH1"?: RenderH1;
        "value"?: number;
    }
    interface IntrinsicElements {
        "my-dropdown": MyDropdown;
        "my-name": MyName;
        "my-rating": MyRating;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "my-dropdown": LocalJSX.MyDropdown & JSXBase.HTMLAttributes<HTMLMyDropdownElement>;
            "my-name": LocalJSX.MyName & JSXBase.HTMLAttributes<HTMLMyNameElement>;
            "my-rating": LocalJSX.MyRating & JSXBase.HTMLAttributes<HTMLMyRatingElement>;
        }
    }
}
